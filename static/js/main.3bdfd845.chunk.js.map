{"version":3,"sources":["firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","props","handleAdd","e","room","preventDefault","dbRef","database","ref","roomId","newTask","task","state","userInput","complete","child","push","handleInput","console","log","target","value","setState","removeTask","taskKey","remove","rooms","tasks","keys","on","data","firebaseDataObj","val","roomArray","taskArray","roomValue","taskId","formattedObj","id","name","className","this","map","i","onClick","htmlFor","type","onChange","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAeAA,IAASC,cAXM,CACXC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAOIR,QAAf,ECwJeS,E,kDAlKb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6ERC,UAAY,SAACC,EAAGC,GACdD,EAAEE,iBAEF,IAAMC,EAAQf,EAASgB,WAAWC,MAE9BC,EAAM,WAAOL,EAAK,GAAZ,KAEJM,EAAU,CACdC,KAAM,EAAKC,MAAMC,UACjBC,UAAU,GAGZR,EAAMS,MAAMN,GAAQO,KAAKN,IA1FR,EAgGnBO,YAAc,SAACd,GACbe,QAAQC,IAAI,eAAgBhB,EAAEiB,OAAOC,OAGrC,EAAKC,SAAS,CACZT,UAAWV,EAAEiB,OAAOC,SArGL,EA0GnBE,WAAa,SAACC,EAASpB,GACrB,IAAME,EAAQf,EAASgB,WAAWC,MAC9BC,EAAM,WAAOL,EAAK,GAAZ,KAEVE,EAAMS,MAAMN,EAASe,GAASC,UA5G9B,EAAKb,MAAQ,CACXc,MAAO,GACPC,MAAO,GACPC,KAAM,GACNf,UAAW,IANI,E,gEAUE,IAAD,OAEJtB,EAASgB,WAAWC,MAG5BqB,GAAG,SAAS,SAACC,GAEjB,IAAMC,EAAkBD,EAAKE,MAE7Bd,QAAQC,IAAI,kBAAmBY,GAU/B,IAAIE,EAAY,GACZC,EAAY,GAGhB,IAAK,IAAIC,KAAaJ,EAAiB,CAIrCE,EAAUjB,KAAKmB,GAEf,IAAMC,EAASL,EAAgBI,GAS/B,IAAK,IAAIX,KAPTN,QAAQC,IAAI,SAAUiB,GAGtBF,EAAUlB,KAAKoB,GACflB,QAAQC,IAAI,YAAae,GAGLE,EAAQ,CAI1B,IAEMC,EAAe,CACnBC,GAAId,EACJe,KAJeH,EAAOZ,GAASb,MAOjCuB,EAAUlB,KAAKqB,GAIjB,EAAKf,SAAS,CACZI,MAAOO,EACPN,MAAOO,U,+BAgDL,IAAD,OAEP,OACE,sBAAKM,UAAU,UAAf,UACE,mCACE,qDACA,4FAEF,+BAEIC,KAAK7B,MAAMc,MAAMgB,KAAI,SAACtC,EAAMuC,GAC1B,OACE,gCACE,6BAAavC,GAAJuC,GACT,+BAEC,EAAK/B,MAAMe,MAAMe,KAAI,SAAC/B,GAErB,OACE,+BACGA,EAAK4B,KACN,wBAAQK,QAAS,WAAQ,EAAKrB,WAAWZ,EAAK2B,KAA9C,sBAFO3B,EAAK2B,OAWhB,iCACE,uBAAOO,QAAQ,UAAUL,UAAU,SAAnC,0BACA,uBAAOM,KAAK,OAAOR,GAAG,UAAUS,SAAU,EAAK9B,cAC/C,wBAAQ2B,QAAS,SAACzC,GAAQ,EAAKD,UAAUC,EAAGC,IAA5C,wBAHSA,qB,GAlJb4C,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3bdfd845.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// configuration object\r\nconst config = {\r\n    apiKey: \"AIzaSyDjFLGw9uZxi2bKP7M5iAYTKa8mZ1b8v74\",\r\n    authDomain: \"cleannie-8323c.firebaseapp.com\",\r\n    databaseURL: \"https://cleannie-8323c.firebaseio.com\",\r\n    projectId: \"cleannie-8323c\",\r\n    storageBucket: \"cleannie-8323c.appspot.com\",\r\n    messagingSenderId: \"739127105460\",\r\n    appId: \"1:739127105460:web:9eedebd42440fa4d51c4e1\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(config);\r\n\r\n// this exports the CONFIGURED version of firebase\r\nexport default firebase;","import './App.scss';\nimport { Component } from 'react';\nimport firebase from './firebase';\n// import Rooms from './components/Rooms';\n\nclass App extends Component {\n\n  // getting all the rooms\n  constructor(props) {\n    super(props);\n    this.state = {\n      rooms: [],\n      tasks: [],\n      keys: [],\n      userInput: ''\n    }\n  }\n\n  componentDidMount() {\n    // firebase database\n    const dbRef = firebase.database().ref();\n\n    // getting data from firebase\n    dbRef.on('value', (data) => {\n\n      const firebaseDataObj = data.val();\n\n      console.log(\"firebaseDataObj\", firebaseDataObj);\n\n      \n\n      // const objArray = Object.keys(firebaseDataObj).map((key) => {\n      //   return [(key), Object.values(firebaseDataObj[key])];\n      // })\n\n      \n\n      let roomArray = [];\n      let taskArray = [];\n\n      // looping through object\n      for (let roomValue in firebaseDataObj) {\n\n        \n\n        roomArray.push(roomValue)\n\n        const taskId = firebaseDataObj[roomValue]\n\n        console.log(\"taskId\", taskId);\n\n\n        taskArray.push(taskId)\n        console.log(\"taskArray\", taskArray);\n\n\n        for (let taskKey in taskId) {\n          // console.log(\"test\", test);\n          // console.log(\"testval\", taskId[test].task);\n\n          const taskName = taskId[taskKey].task\n\n          const formattedObj = {\n            id: taskKey,\n            name: taskName\n          };\n\n          taskArray.push(formattedObj)\n        }\n\n\n        this.setState({\n          rooms: roomArray,\n          tasks: taskArray\n        })\n\n      }\n\n      \n\n    })\n  }\n\n  \n\n\n  handleAdd = (e, room) => {\n    e.preventDefault();\n\n    const dbRef = firebase.database().ref();\n\n    let roomId = `/${room[0]}/`\n\n    const newTask = {\n      task: this.state.userInput,\n      complete: false\n    }\n\n    dbRef.child(roomId).push(newTask);\n\n  }\n\n\n\n  handleInput = (e) => {\n    console.log(\"target value\", e.target.value);\n    \n\n    this.setState({\n      userInput: e.target.value\n    })\n  }\n\n  // removing tasks\n  removeTask = (taskKey, room) => {\n    const dbRef = firebase.database().ref();\n    let roomId = `/${room[0]}/`\n\n    dbRef.child(roomId + taskKey).remove()\n  }\n\n  render() {\n\n    return (\n      <div className=\"wrapper\">\n        <header>\n          <h1>I Dream of Cleannie</h1>\n          <h2>Keep track of everything in your home you need to clean</h2>\n        </header>\n        <main>\n          \n          { this.state.rooms.map((room, i) => {\n              return (\n                <div>\n                  <h3 key={i}>{room}</h3>\n                  <ul>\n\n                  {this.state.tasks.map((task) => {\n\n                    return (\n                      <li key={task.id}>\n                        {task.name}\n                        <button onClick={() => { this.removeTask(task.id) }}>remove</button>\n                      \n                      </li>\n                      \n                    )\n\n\n                  })\n                  } \n                    <form key={room}>\n                      <label htmlFor=\"newTask\" className=\"srOnly\">Add new task</label>\n                      <input type=\"text\" id=\"newTask\" onChange={this.handleInput} />\n                      <button onClick={(e) => { this.handleAdd(e, room) }}>Add Task</button>\n                    </form>\n                  </ul>\n                </div>\n                \n              )\n            }) \n          } \n\n\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}